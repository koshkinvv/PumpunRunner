import logging

def format_training_day(day, training_day_num):
    """
    –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–Ω—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –≤–∫–ª—é—á–∞—è –ø—É–ª—å—Å–æ–≤—ã–µ –∑–æ–Ω—ã, –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ,
    —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é.
    
    Args:
        day: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –¥–Ω–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
        training_day_num: –ù–æ–º–µ—Ä –¥–Ω—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
        
    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–Ω–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–µ–Ω—å —è–≤–ª—è–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä–µ–º
        if not isinstance(day, dict):
            logging.error(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–Ω—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: {type(day)}, –∑–Ω–∞—á–µ–Ω–∏–µ: {day}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –¥–µ–Ω—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
            return (
                f"*–î–µ–Ω—å {training_day_num}*\n"
                f"–¢–∏–ø: –õ–µ–≥–∫–∞—è –ø—Ä–æ–±–µ–∂–∫–∞\n"
                f"–î–∏—Å—Ç–∞–Ω—Ü–∏—è: 5 –∫–º\n"
                f"–¢–µ–º–ø: 6:00-6:30 –º–∏–Ω/–∫–º\n\n"
                f"üîÑ –†–∞–∑–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ 10-15 –º–∏–Ω—É—Ç\n\n"
                f"üèÉ –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å: –õ–µ–≥–∫–∞—è –ø—Ä–æ–±–µ–∂–∫–∞ –≤ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–º —Ç–µ–º–ø–µ\n\n"
                f"üßò –ó–∞–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ 5 –º–∏–Ω—É—Ç –∏ —Ä–∞—Å—Ç—è–∂–∫–∞"
            )
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –¥–Ω–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
        try:
            # –°–æ–±–∏—Ä–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            day_date = day.get('date', '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')
            day_name = day.get('day', day.get('day_of_week', f'–î–µ–Ω—å {training_day_num}'))
            
            # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ —Ç–∏–ø–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
            training_type = None
            for field in ['training_type', 'type', 'workout_type']:
                if field in day and day[field]:
                    training_type = day[field]
                    break
            if not training_type:
                training_type = '–¢–∏–ø –Ω–µ —É–∫–∞–∑–∞–Ω'
            
            # –î–∏—Å—Ç–∞–Ω—Ü–∏—è –∏ —Ç–µ–º–ø
            distance = day.get('distance', '–î–∏—Å—Ç–∞–Ω—Ü–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞')
            pace = day.get('pace', '–¢–µ–º–ø –Ω–µ —É–∫–∞–∑–∞–Ω')
            
            # –ü—É–ª—å—Å–æ–≤—ã–µ –∑–æ–Ω—ã
            heart_rate = day.get('heart_rate', '')
            heart_rate_text = f"\n–ü—É–ª—å—Å: {heart_rate}" if heart_rate else ""
            
            # –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
            description = day.get('description', '')
            purpose = day.get('purpose', '')
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—è –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
            workout_segments = day.get('workout_segments', {})
            warmup_segment = workout_segments.get('warmup', '')
            main_segment = workout_segments.get('main', '')
            cooldown_segment = workout_segments.get('cooldown', '')
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            nutrition = day.get('nutrition', '')
            recovery = day.get('recovery', '')
            notes = day.get('notes', '')
            
            # –¢–∞–∫–∂–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –ø—Ä—è–º—ã–µ –ø–æ–ª—è
            direct_warmup = day.get('warmup', '')
            direct_main = day.get('main_part', '')
            direct_cooldown = day.get('cooldown', '')
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏–ª–∏ –ø—Ä—è–º—ã—Ö –ø–æ–ª–µ–π
            warmup = warmup_segment or direct_warmup
            main_part = main_segment or direct_main
            cooldown = cooldown_segment or direct_cooldown
            
        except Exception as e:
            logging.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
            return (
                f"*–î–µ–Ω—å {training_day_num}*\n"
                f"–¢–∏–ø: –õ–µ–≥–∫–∞—è –ø—Ä–æ–±–µ–∂–∫–∞\n"
                f"–î–∏—Å—Ç–∞–Ω—Ü–∏—è: 5 –∫–º\n"
                f"–¢–µ–º–ø: 6:00-6:30 –º–∏–Ω/–∫–º\n\n"
                f"üîÑ –†–∞–∑–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ 10-15 –º–∏–Ω—É—Ç\n\n"
                f"üèÉ –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å: –õ–µ–≥–∫–∞—è –ø—Ä–æ–±–µ–∂–∫–∞ –≤ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–º —Ç–µ–º–ø–µ\n\n"
                f"üßò –ó–∞–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ 5 –º–∏–Ω—É—Ç –∏ —Ä–∞—Å—Ç—è–∂–∫–∞"
            )
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
        try:
            description_parts = []
            
            # 1. –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ–ª–µ–π warmup, main_part, cooldown –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
            if warmup or main_part or cooldown:
                if warmup:
                    description_parts.append(f"üîÑ –†–∞–∑–º–∏–Ω–∫–∞: {warmup}")
                else:
                    description_parts.append(f"üîÑ –†–∞–∑–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ –≤ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–º —Ç–µ–º–ø–µ 10-15 –º–∏–Ω—É—Ç")
                
                if main_part:
                    description_parts.append(f"üèÉ –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å: {main_part}")
                elif description:
                    description_parts.append(f"üèÉ –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å: {description}")
                else:
                    description_parts.append(f"üèÉ –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å: –ë–µ–≥ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ç–µ–º–ø–µ")
                
                if cooldown:
                    description_parts.append(f"üßò –ó–∞–º–∏–Ω–∫–∞: {cooldown}")
                else:
                    description_parts.append(f"üßò –ó–∞–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ 5-10 –º–∏–Ω—É—Ç –∏ —Ä–∞—Å—Ç—è–∂–∫–∞")
                
            # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
            elif description and ("–†–∞–∑–º–∏–Ω–∫–∞:" in description or "–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å:" in description or "–ó–∞–º–∏–Ω–∫–∞:" in description):
                # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–∞–∑–º–∏–Ω–∫—É
                if "–†–∞–∑–º–∏–Ω–∫–∞:" in description:
                    try:
                        warmup_text = description.split("–†–∞–∑–º–∏–Ω–∫–∞:")[1].split("–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å:")[0].strip() if "–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å:" in description else description.split("–†–∞–∑–º–∏–Ω–∫–∞:")[1].strip()
                        description_parts.append(f"üîÑ –†–∞–∑–º–∏–Ω–∫–∞: {warmup_text}")
                    except Exception:
                        description_parts.append("üîÑ –†–∞–∑–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ –≤ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–º —Ç–µ–º–ø–µ 10-15 –º–∏–Ω—É—Ç")
                else:
                    description_parts.append("üîÑ –†–∞–∑–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ –≤ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–º —Ç–µ–º–ø–µ 10-15 –º–∏–Ω—É—Ç")
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å
                if "–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å:" in description:
                    try:
                        main_text = description.split("–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å:")[1].split("–ó–∞–º–∏–Ω–∫–∞:")[0].strip() if "–ó–∞–º–∏–Ω–∫–∞:" in description else description.split("–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å:")[1].strip()
                        description_parts.append(f"üèÉ –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å: {main_text}")
                    except Exception:
                        description_parts.append(f"üèÉ –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å: {description}")
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–º–∏–Ω–∫—É
                if "–ó–∞–º–∏–Ω–∫–∞:" in description:
                    try:
                        cooldown_text = description.split("–ó–∞–º–∏–Ω–∫–∞:")[1].strip()
                        description_parts.append(f"üßò –ó–∞–º–∏–Ω–∫–∞: {cooldown_text}")
                    except Exception:
                        description_parts.append("üßò –ó–∞–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ 5-10 –º–∏–Ω—É—Ç –∏ —Ä–∞—Å—Ç—è–∂–∫–∞")
                else:
                    description_parts.append("üßò –ó–∞–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ 5-10 –º–∏–Ω—É—Ç –∏ —Ä–∞—Å—Ç—è–∂–∫–∞")
                
            # 3. –ï—Å–ª–∏ –Ω–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é
            else:
                description_parts = [
                    f"üîÑ –†–∞–∑–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ –≤ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–º —Ç–µ–º–ø–µ 10-15 –º–∏–Ω—É—Ç",
                    f"üèÉ –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å: {description if description else '–ë–µ–≥ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ç–µ–º–ø–µ –∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∏—Å—Ç–∞–Ω—Ü–∏—é'}",
                    f"üßò –ó–∞–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ 5-10 –º–∏–Ω—É—Ç –∏ —Ä–∞—Å—Ç—è–∂–∫–∞"
                ]
                
            # –û–±—ä–µ–¥–∏–Ω—è–µ–º —á–∞—Å—Ç–∏ –æ–ø–∏—Å–∞–Ω–∏—è
            structured_description = "\n\n".join(description_parts)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ü–µ–ª—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å —ç–º–æ–¥–∑–∏, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞
            if purpose:
                structured_description += f"\n\nüéØ –¶–µ–ª—å: {purpose}"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã
            if nutrition:
                structured_description += f"\n\nüçé –ü–∏—Ç–∞–Ω–∏–µ: {nutrition}"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã
            if recovery:
                structured_description += f"\n\nüîã –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: {recovery}"
                
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã
            if notes:
                structured_description += f"\n\nüìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è: {notes}"
                
        except Exception as e:
            logging.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è: {e}")
            structured_description = "üèÉ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –≤ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–º —Ç–µ–º–ø–µ. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ —Ä–∞–∑–º–∏–Ω–∫–µ –∏ –∑–∞–º–∏–Ω–∫–µ."
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            formatted_message = (
                f"*–î–µ–Ω—å {training_day_num}: {day_name} ({day_date})*\n"
                f"–¢–∏–ø: {training_type}\n"
                f"–î–∏—Å—Ç–∞–Ω—Ü–∏—è: {distance}\n"
                f"–¢–µ–º–ø: {pace}{heart_rate_text}\n\n"
                f"{structured_description}"
            )
            return formatted_message
            
        except Exception as e:
            logging.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            formatted_message = (
                f"*–î–µ–Ω—å {training_day_num}*\n"
                f"–¢–∏–ø: {training_type}\n"
                f"–î–∏—Å—Ç–∞–Ω—Ü–∏—è: {distance}\n\n"
                f"{structured_description}"
            )
            return formatted_message
            
    except Exception as e:
        logging.exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ format_training_day: {e}")
        # –í —Å–ª—É—á–∞–µ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–π –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        return (
            f"*–î–µ–Ω—å {training_day_num}*\n"
            f"–¢–∏–ø: –õ–µ–≥–∫–∞—è –ø—Ä–æ–±–µ–∂–∫–∞\n"
            f"–î–∏—Å—Ç–∞–Ω—Ü–∏—è: 5 –∫–º\n"
            f"–¢–µ–º–ø: 6:00-6:30 –º–∏–Ω/–∫–º\n\n"
            f"üîÑ –†–∞–∑–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ 10-15 –º–∏–Ω—É—Ç\n\n"
            f"üèÉ –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å: –õ–µ–≥–∫–∞—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–±–µ–∂–∫–∞ –≤ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–º —Ç–µ–º–ø–µ\n\n"
            f"üßò –ó–∞–º–∏–Ω–∫–∞: –õ–µ–≥–∫–∏–π –±–µ–≥ 5 –º–∏–Ω—É—Ç –∏ —Ä–∞—Å—Ç—è–∂–∫–∞"
        )